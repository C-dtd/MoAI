<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>문서 요약 챗봇</title>
    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/pico.css">
    <style>
        textarea {
            resize: none;
            height: 272px;
        }
        .fileUploader {
            margin-left: 80%;
            width: 20%;
        }
    </style>
</head>
<body>
    <header>
        <nav>
            <!-- 네비게이션 메뉴 -->
            <a href="/calendar">홈으로 돌아가기</a>
        </nav>
    </header>
    <main>
        <h1>문서 기반 보고서 작성</h1>
        <form id="upload-form" action="/upload" method="post" enctype="multipart/form-data">
            <label for="user-input">보고서의 주제</label>
            <textarea name="user_input" id="user-input"></textarea>
            <div style="position: relative;">
                <div role="button" onclick="fileUpload()" class="fileUploader">파일 선택</div>
            </div>
            <input type="file" id="file-upload" name="file" accept=".pdf" multiple style="display: none;">
            
            <ul class="file-list"></ul>
            <button type="submit">파일 업로드 및 처리</button>
        </form>
        <div id="result" style="margin-top: 20px;"></div>
    </main>

    <script>
        function fileUpload() {
            document.querySelector('#file-upload').click();
        }

        const fileInput = document.querySelector('#file-upload');
        fileInput.addEventListener('change', () => {
            const files = fileInput.files;
            const fileList = document.querySelector('.file-list');
            fileList.innerHTML = '';

            for (let i=0; i<files.length; i++) {
                const li = document.createElement('li');
                li.innerText = files[i].name;
                fileList.appendChild(li);
            }
        });

        const form = document.getElementById('upload-form');
        form.addEventListener('submit', async function (event) {
            event.preventDefault(); // 기본 폼 제출 동작 방지
            form.querySelector('button[type=submit]').setAttribute('aria-busy', true);
            const resultDiv = document.getElementById('result');
            resultDiv.innerHTML = '';

            const response_id = await fetch('/session/user_id');
            const user_id = await response_id.text();

            const formData = new FormData(form);
            formData.append('user_input', document.querySelector('#user-input').value);
            formData.append('user_id', user_id);
            try {
                const response = await fetch('http://localhost:5100/summary', {
                    method: 'POST',
                    body: formData
                })
                if (!response.ok) {
                    throw new Error(response.statusText);
                }
                const data = await response.json(); 
                if (data.result === 'ok') {
                    resultDiv.innerHTML = `<p>파일이 성공적으로 처리되었습니다.</p>`;
                    const a = document.createElement('a');
                    a.setAttribute('href',`${data.processedFilePath}`);
                    a.innerText = '처리된 파일 다운로드';
                    resultDiv.appendChild(a);
                    a.click();
                } else {
                    resultDiv.innerHTML = `<p>파일 처리에 실패했습니다.: ${data.error}</p>`;
                }
            } catch (error) {
                console.error('Error:', error);
                resultDiv.innerHTML = `<p>파일 처리 중 오류가 발생했습니다.</p>`;
            }
            form.querySelector('button[type=submit]').setAttribute('aria-busy', false);
        });
    </script>
</body>
</html>
