<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css">
    <script src="/socket.io/socket.io.js"></script>
    <style>
        body {
            display: flex;
            flex-direction: column;
            height: 100vh;
        }
        main {
            flex-grow: 1;
            overflow-y: auto;
        }
        article.my-chat, article.other-chat {
            width: 60%;
        }
        article.my-chat {
            margin-left: 40%;
        }
    </style>
</head>
<body>
    <header class="container">
        <!-- roomId: </span>{{roomId}}</span><br> -->
        <input type="text" id="user-id" placeholder="username" value="my_id"></input>
    </header>
    <main class="container">
        <div class="msg-cont">
        <% chat_log.forEach((row) => { %>
            <article class="<%= ((row.user_id=='my_id') ? 'my-chat' : 'other-chat') %> <%= row.type %>">
                <header>
                    <%= row.user_id %>
                </header>
                <main>
                    <% if (row.type == 'text') { %>
                        <%= row.chat %>
                    <% } else if (row.type == 'img') { %> 
                        <img src="<%= row.chat %>" alt="img">
                    <% } %>
                </main>
            </article>
            <% }) %>
        </div>
    </main>
    <footer class="container">
        <div class="msg-form" role="group">
            <button id="imgUpload"><label for="img-input">img</label></button>
            <textarea type="text" id="msg"></textarea>
            <button id="submit">submit</button>
        </div>
    </footer>
    <input type="file" id="img-input" style="display: none;" accept="image/*">
    <script>
        const socket = io(); 
        const userId = document.querySelector('#user-id');
        // socket.emit('joined', {'name': userId.textContent});
        const cont = document.querySelector('.msg-cont');
        const chat_main = document.querySelector('main.container');
        const imgInput = document.querySelector('#img-input');
        const allowExt = ['png', 'pjp', 'jpg', 'jpeg', 'jfif', 'webp', 'bmp'];
        chat_main.scrollTop = chat_main.scrollHeight;

        socket.on('msg', (msg) => {
            const chatbox = document.createElement('article');
            if (msg.name == userId.value) {
                chatbox.className += 'my-chat';
            } else {
                chatbox.className += 'other-chat';
            }
            chatbox.className += ' ' +msg.type;
            const header = document.createElement('header');
            header.innerText = msg.name;
            chatbox.appendChild(header);
            
            const main = document.createElement('main');
            if (msg.type == 'text') {
                main.innerText = msg.message;
            } else if (msg.type == 'img') {
                const img = document.createElement('img');
                img.setAttribute('src', '/'+msg.message);
                main.appendChild(img);
            }
            chatbox.appendChild(main);
            cont.appendChild(chatbox);

            chat_main.scrollTop = chat_main.scrollHeight;
        });

        document.querySelector('#submit').addEventListener('click', (e) => {
            const userMsg = document.querySelector('#msg');
            socket.emit('msg', {name: userId.value, message: userMsg.value, type: 'text'});
            userMsg.value = '';
            return false;
        });

        imgInput.addEventListener('input', async (e) => {
            let formData = new FormData();
            formData.append('file', imgInput.files[0]);

            if (!allowExt.includes(imgInput.files[0].name.split('.').pop())) {
                document.imgInput.value = '';
                return false;
            }

            const response = await fetch('/upload', {
                method: 'POST',
                body: formData
            });
            const res = await response.json();
            console.log(res);
            
            imgInput.value = '';
            socket.emit('msg', {name: userId.value, message: res.path, type: 'img'});
        });
    </script>
</body>
</html>